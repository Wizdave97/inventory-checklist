{"version":3,"sources":["components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","store/actions/inventoryActions.js","containers/Inventory/Inventory.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1___default","spinner","a","createElement","className","classes","Loader","module","exports","load2","d","__webpack_exports__","addInventoryComplete","updateInventoryComplete","addInventory","updateInventory","increaseQuantity","increaseQuantityAsync","decreaseQuantityAsync","decreaseQuantity","fetchInventory","deleteInventory","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","addInventorySync","type","fetchInventorySync","value","arguments","length","undefined","actionTypes","updateInventorySync","data","idToken","dispatch","url","concat","fetch","method","body","JSON","stringify","then","response","json","catch","err","id","quantity","Number","userId","queryParams","inventory","Object","entries","deleteInventorySync","Inventory","state","filters","currentFilter","query","handleFilter","target","name","_this","setState","toLowerCase","handleSearch","event","viewItem","props","history","push","this","onFetchInventory","auth","localId","_this2","match","RegExp","nowShowing","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","align","variant","color","error","C_Users_Wizdave_udacity_git_course_React_inventory_checklist_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","filter","_ref","_ref2","C_Users_Wizdave_udacity_git_course_React_inventory_checklist_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","obj","test","category","_ref3","_ref4","item_name","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_14__","map","_ref5","_ref6","key","item","xs","sm","md","lg","card","onClick","component","alt","media","image","image_url","title","gutterBottom","unit","Link","to","size","_material_ui_icons__WEBPACK_IMPORTED_MODULE_11__","onDeleteInventory","deleteInventoryFail","Fragment","container","justify","direction","alignItems","toUpperCase","label","activeFilter","root","elevation","onChange","input","placeholder","divider","iconButton","aria-label","Component","connect","actions","withStyles","theme","width","height","objectFit","padding","display","marginLeft","flex","margin","palette","secondary","light"],"mappings":"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","file":"static/js/7.8636ca6d.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__Kn1Z5\",\"load2\":\"Spinner_load2__otO50\"};","import * as actionTypes from './actionTypes';\r\nexport const addInventorySync = (type) =>{\r\n  return {\r\n    type:type\r\n  }\r\n}\r\nexport const fetchInventorySync = (type,value=null) =>{\r\n  return {\r\n    type:type,\r\n    value:value\r\n  }\r\n}\r\nexport const addInventoryComplete =()=>{\r\n  return {\r\n    type:actionTypes.ADD_INVENTORY_COMPLETE\r\n  }\r\n}\r\nexport const updateInventorySync = (type) =>{\r\n  return {\r\n    type:type\r\n  }\r\n}\r\nexport const updateInventoryComplete =()=>{\r\n  return {\r\n    type:actionTypes.UPDATE_INVENTORY_COMPLETE\r\n  }\r\n}\r\nexport const addInventory = (data,idToken)=>{\r\n  return dispatch =>{\r\n    dispatch(addInventorySync(actionTypes.ADD_INVENTORY))\r\n    let url=`https://soup-kitchen-8a966.firebaseio.com/inventory.json?auth=${idToken}`\r\n    fetch(url,{method:'POST',body:JSON.stringify(data)}).then(response=>{\r\n      return response.json()\r\n    }).then(response=>{\r\n      dispatch(addInventorySync(actionTypes.ADD_INVENTORY_SUCCESS))\r\n    }).catch(err=>{\r\n      dispatch(addInventorySync(actionTypes.ADD_INVENTORY_FAIL))\r\n    })\r\n  }\r\n}\r\nexport const updateInventory = (data,idToken,id)=>{\r\n  return dispatch =>{\r\n    dispatch(updateInventorySync(actionTypes.UPDATE_INVENTORY))\r\n    let url=`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}.json?auth=${idToken}`\r\n    fetch(url,{method:'PATCH',body:JSON.stringify(data)}).then(response=>{\r\n      return response.json()\r\n    }).then(response=>{\r\n      dispatch(updateInventorySync(actionTypes.UPDATE_INVENTORY_SUCCESS))\r\n    }).catch(err=>{\r\n      dispatch(updateInventorySync(actionTypes.UPDATE_INVENTORY_FAIL))\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const increaseQuantity = (type,id) =>{\r\n  return {\r\n    type:type,\r\n    value:id\r\n  }\r\n}\r\nexport const increaseQuantityAsync= (id,idToken,quantity)=>{\r\n  quantity=Number(quantity)\r\n  return dispatch=>{\r\n    let url =`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}/.json?auth=${idToken}`\r\n    fetch(url,{\r\n      method:'PATCH',\r\n      body:JSON.stringify({quantity:quantity})\r\n    }).then(response=>{\r\n      //console.log(response)\r\n    }).catch(err=>{\r\n      dispatch(increaseQuantity(actionTypes.INCREASE_QUANTITY_FAIL,id))\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreaseQuantityAsync= (id,idToken,quantity)=>{\r\n  quantity=Number(quantity)\r\n  return dispatch=>{\r\n    let url =`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}/.json?auth=${idToken}`\r\n    fetch(url,{\r\n      method:'PATCH',\r\n      body:JSON.stringify({quantity:quantity})\r\n    }).then(response=>{\r\n      //console.log(response)\r\n    }).catch(err=>{\r\n      dispatch(increaseQuantity(actionTypes.INCREASE_QUANTITY_FAIL,id))\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreaseQuantity = (type,id) =>{\r\n  return {\r\n    type:type,\r\n    value:id\r\n  }\r\n}\r\nexport const fetchInventory=(idToken,userId)=>{\r\n  return dispatch=>{\r\n    dispatch(fetchInventorySync(actionTypes.FETCH_INVENTORY))\r\n    let queryParams=`?auth=${idToken}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    let url=`https://soup-kitchen-8a966.firebaseio.com/inventory.json${queryParams}`;\r\n    fetch(url).then(response=> response.json()).then(response=>{\r\n      let inventory=Object.entries(response)\r\n      dispatch(fetchInventorySync(actionTypes.FETCH_INVENTORY_SUCCESS, inventory))\r\n    }).catch(err=> dispatch(fetchInventorySync(actionTypes.FETCH_INVENTORY_FAIL)))\r\n  }\r\n}\r\n\r\nexport const deleteInventorySync= (type,id)=>{\r\n  return{\r\n    type:type,\r\n    value:id\r\n  }\r\n}\r\n\r\nexport const deleteInventory =(id,idToken)=>{\r\n  return dispatch =>{\r\n    let url =`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}.json?auth=${idToken}`;\r\n    fetch(url,{\r\n      method:'DELETE'\r\n    }).then(response=>{\r\n      dispatch(deleteInventorySync(actionTypes.DELETE_INVENTORY,id))\r\n      //console.log(response)\r\n    }).catch(err=>{\r\n      dispatch(deleteInventorySync(actionTypes.DELETE_INVENTORY_FAIL,id))\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Grid ,Typography,InputBase, Divider, Paper, Card, CardActionArea, CardMedia, CardContent, CardActions, Button, IconButton} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { Edit, Delete, Search } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/inventoryActions';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst styles= theme =>({\r\n  card:{\r\n    width:'100%'\r\n  },\r\n  media:{\r\n    height:140,\r\n    objectFit:'cover'\r\n  },\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  activeFilter:{\r\n    color:theme.palette.secondary.light\r\n  }\r\n})\r\nclass Inventory extends Component {\r\n  state={\r\n    filters:['','utensils','fruit','vegetables','cereal','meat','grain','liquid','spice','equipment'],\r\n    currentFilter:'',\r\n    query:'',\r\n  }\r\n  componentDidMount(){\r\n    this.props.onFetchInventory(this.props.auth.idToken,this.props.auth.localId);\r\n  }\r\n  handleFilter= (target,name) =>{\r\n    this.setState({\r\n      currentFilter:name.toLowerCase()\r\n    })\r\n\r\n  }\r\n  handleSearch =(event)=>{\r\n    this.setState({\r\n      query:event.target.value\r\n    })\r\n  }\r\n  viewItem = (id)=>{\r\n    this.props.history.push(`/viewItem/${id}`)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    let inventory=null\r\n    let match= new RegExp(`${this.state.currentFilter}`,'gi');\r\n    let query= new RegExp(`${this.state.query}`,'gi');\r\n    let nowShowing=null;\r\n    if(this.props.inventory&&this.props.inventory.length===0) {\r\n      inventory=(\r\n      <Typography align=\"center\" variant=\"h4\" color=\"secondary\">\r\n        Your inventory is empty start adding items by navigating to the add Inventory Page\r\n      </Typography>)}\r\n    if(this.props.error) {\r\n      inventory=(\r\n      <Typography align=\"center\" variant=\"h4\" color=\"secondary\">\r\n        A network error Occured\r\n      </Typography>)\r\n    }\r\n    if(this.props.inventory) nowShowing=[...this.props.inventory];\r\n    if (this.state.currentFilter){\r\n      nowShowing=nowShowing.filter(([id,obj])=>{\r\n        return match.test(obj.category)\r\n      })\r\n    }\r\n    if(this.state.query){\r\n      nowShowing=nowShowing.filter(([id,obj])=>{\r\n        return match.test(obj.category) && query.test(obj.item_name)\r\n      })\r\n    }\r\n    if(this.props.loading) inventory=<Spinner/>\r\n    if(nowShowing){\r\n      if(nowShowing.length!==0){\r\n        inventory=nowShowing.map(([id,inventory])=>{\r\n          //console.log(inventory)\r\n          return(\r\n            <Grid key={id} item xs={12} sm={6} md={3} lg={3}>\r\n            <Card className={classes.card} >\r\n                    <CardActionArea\r\n                      onClick={()=>this.viewItem(id)}>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        alt={inventory.item_name}\r\n                        className={classes.media}\r\n                        image={inventory.image_url?inventory.image_url:\"/assets/placeholder.png\"}\r\n                        title=\"Food\"\r\n\r\n                        />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {inventory.item_name}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                          Quantity <strong>{inventory.quantity} {inventory.unit}</strong>\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button component={Link} to={`/editItem/${id}`} size=\"small\" color=\"secondary\">\r\n                        <Edit/>Edit\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"secondary\" onClick={()=>this.props.onDeleteInventory(id,this.props.auth.idToken)}>\r\n                        <Delete/>Delete\r\n                      </Button>\r\n                      {this.props.deleteInventoryFail?<Typography variant='body1'>Delete failed tryagain</Typography>:''}\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>)\r\n        })\r\n      }\r\n\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n        <Grid container\r\n\r\n          justify=\"space-around\"\r\n          direction=\"row\"\r\n          alignItems=\"center\">\r\n          {this.state.filters.map(filter=>{\r\n            return (<Button component='button'\r\n                            key={filter}\r\n                            variant=\"outlined\"\r\n                            color=\"default\"\r\n                            onClick={(event)=> this.handleFilter(event.target,filter)}\r\n                            classes={this.state.currentFilter.toUpperCase()===filter.toUpperCase()?{label:classes.activeFilter}:{label:''}}\r\n                            >{filter?filter:'all'}</Button>)\r\n          })}\r\n        </Grid>\r\n        <Grid container\r\n          justify=\"center\"\r\n          direction=\"row\"\r\n          alignItems=\"center\">\r\n            <Paper  xs={12} sm={6} md={6} lg={6} className={classes.root} elevation={1}>\r\n              <InputBase value={this.state.query} onChange={(event) => this.handleSearch(event)} className={classes.input} placeholder=\"Search Inventory by name\" />\r\n              <Divider className={classes.divider} />\r\n              <IconButton className={classes.iconButton} aria-label=\"Search Inventory by name\">\r\n                <Search />\r\n              </IconButton>\r\n            </Paper>\r\n        </Grid>\r\n        {inventory}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps= state=>({\r\n  inventory:state.inventory.inventory,\r\n  loading:state.inventory.loading,\r\n  error:state.inventory.error,\r\n  deleteInventoryFail:state.inventory.deleteInventoryFail,\r\n  auth:state.auth\r\n})\r\nconst mapDispatchToProps= dispatch=>({\r\n  onFetchInventory: (idToken,userId)=> dispatch(actions.fetchInventory(idToken,userId)),\r\n  onDeleteInventory: (id,idToken)=>dispatch(actions.deleteInventory(id,idToken))\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Inventory));\r\n"],"sourceRoot":""}