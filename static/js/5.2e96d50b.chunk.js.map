{"version":3,"sources":["components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","store/actions/inventoryActions.js","placeholder.png","containers/InventoryItem/InventoryItem.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1___default","spinner","a","createElement","className","classes","Loader","module","exports","load2","d","__webpack_exports__","addInventoryComplete","updateInventoryComplete","addInventory","updateInventory","increaseQuantity","increaseQuantityAsync","decreaseQuantityAsync","decreaseQuantity","fetchInventory","deleteInventory","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","addInventorySync","type","fetchInventorySync","value","arguments","length","undefined","actionTypes","updateInventorySync","data","idToken","dispatch","url","concat","fetch","method","body","JSON","stringify","then","response","json","catch","err","id","quantity","Number","userId","queryParams","inventory","Object","entries","deleteInventorySync","p","InventoryItem","state","inventoryItem","loading","updateState","_this","props","match","params","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","setState","return","handleAddQuantity","onIncreaseQuantity","handleDecreaseQuantity","onDecreaseQuantity","handleAddQuantityAsync","auth","i","onIncreaseQuantityAsync","handleDecreaseQuantityAsync","onDecreaseQuantityAsync","this","_this2","_this$state","item","react__WEBPACK_IMPORTED_MODULE_5___default","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","card","component","alt","item_name","media","image","image_url","PlaceHolder","title","gutterBottom","variant","unit","size","color","onClick","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","xs","sm","md","Component","connect","actions","withStyles","theme","root","display","flexWrap","width","height","objectFit","@media screen and (min-width:576px)","itemContainer"],"mappings":"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","file":"static/js/5.2e96d50b.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__Kn1Z5\",\"load2\":\"Spinner_load2__otO50\"};","import * as actionTypes from './actionTypes';\r\nexport const addInventorySync = (type) =>{\r\n  return {\r\n    type:type\r\n  }\r\n}\r\nexport const fetchInventorySync = (type,value=null) =>{\r\n  return {\r\n    type:type,\r\n    value:value\r\n  }\r\n}\r\nexport const addInventoryComplete =()=>{\r\n  return {\r\n    type:actionTypes.ADD_INVENTORY_COMPLETE\r\n  }\r\n}\r\nexport const updateInventorySync = (type) =>{\r\n  return {\r\n    type:type\r\n  }\r\n}\r\nexport const updateInventoryComplete =()=>{\r\n  return {\r\n    type:actionTypes.UPDATE_INVENTORY_COMPLETE\r\n  }\r\n}\r\nexport const addInventory = (data,idToken)=>{\r\n  return dispatch =>{\r\n    dispatch(addInventorySync(actionTypes.ADD_INVENTORY))\r\n    let url=`https://soup-kitchen-8a966.firebaseio.com/inventory.json?auth=${idToken}`\r\n    fetch(url,{method:'POST',body:JSON.stringify(data)}).then(response=>{\r\n      return response.json()\r\n    }).then(response=>{\r\n      dispatch(addInventorySync(actionTypes.ADD_INVENTORY_SUCCESS))\r\n    }).catch(err=>{\r\n      dispatch(addInventorySync(actionTypes.ADD_INVENTORY_FAIL))\r\n    })\r\n  }\r\n}\r\nexport const updateInventory = (data,idToken,id)=>{\r\n  return dispatch =>{\r\n    dispatch(updateInventorySync(actionTypes.UPDATE_INVENTORY))\r\n    let url=`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}.json?auth=${idToken}`\r\n    fetch(url,{method:'PATCH',body:JSON.stringify(data)}).then(response=>{\r\n      return response.json()\r\n    }).then(response=>{\r\n      dispatch(updateInventorySync(actionTypes.UPDATE_INVENTORY_SUCCESS))\r\n    }).catch(err=>{\r\n      dispatch(updateInventorySync(actionTypes.UPDATE_INVENTORY_FAIL))\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const increaseQuantity = (type,id) =>{\r\n  return {\r\n    type:type,\r\n    value:id\r\n  }\r\n}\r\nexport const increaseQuantityAsync= (id,idToken,quantity)=>{\r\n  quantity=Number(quantity)\r\n  return dispatch=>{\r\n    let url =`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}/.json?auth=${idToken}`\r\n    fetch(url,{\r\n      method:'PATCH',\r\n      body:JSON.stringify({quantity:quantity})\r\n    }).then(response=>{\r\n      //console.log(response)\r\n    }).catch(err=>{\r\n      dispatch(increaseQuantity(actionTypes.INCREASE_QUANTITY_FAIL,id))\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreaseQuantityAsync= (id,idToken,quantity)=>{\r\n  quantity=Number(quantity)\r\n  return dispatch=>{\r\n    let url =`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}/.json?auth=${idToken}`\r\n    fetch(url,{\r\n      method:'PATCH',\r\n      body:JSON.stringify({quantity:quantity})\r\n    }).then(response=>{\r\n      //console.log(response)\r\n    }).catch(err=>{\r\n      dispatch(increaseQuantity(actionTypes.INCREASE_QUANTITY_FAIL,id))\r\n    })\r\n  }\r\n}\r\n\r\nexport const decreaseQuantity = (type,id) =>{\r\n  return {\r\n    type:type,\r\n    value:id\r\n  }\r\n}\r\nexport const fetchInventory=(idToken,userId)=>{\r\n  return dispatch=>{\r\n    dispatch(fetchInventorySync(actionTypes.FETCH_INVENTORY))\r\n    let queryParams=`?auth=${idToken}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    let url=`https://soup-kitchen-8a966.firebaseio.com/inventory.json${queryParams}`;\r\n    fetch(url).then(response=> response.json()).then(response=>{\r\n      let inventory=Object.entries(response)\r\n      dispatch(fetchInventorySync(actionTypes.FETCH_INVENTORY_SUCCESS, inventory))\r\n    }).catch(err=> dispatch(fetchInventorySync(actionTypes.FETCH_INVENTORY_FAIL)))\r\n  }\r\n}\r\n\r\nexport const deleteInventorySync= (type,id)=>{\r\n  return{\r\n    type:type,\r\n    value:id\r\n  }\r\n}\r\n\r\nexport const deleteInventory =(id,idToken)=>{\r\n  return dispatch =>{\r\n    let url =`https://soup-kitchen-8a966.firebaseio.com/inventory/${id}.json?auth=${idToken}`;\r\n    fetch(url,{\r\n      method:'DELETE'\r\n    }).then(response=>{\r\n      dispatch(deleteInventorySync(actionTypes.DELETE_INVENTORY,id))\r\n      //console.log(response)\r\n    }).catch(err=>{\r\n      dispatch(deleteInventorySync(actionTypes.DELETE_INVENTORY_FAIL,id))\r\n    })\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.17fdc053.png\";","import React, { Component } from 'react';\r\nimport { Grid, Typography,Card, CardActionArea, CardMedia, CardContent, CardActions,Button} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AddCircle, RemoveCircle} from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/inventoryActions';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport PlaceHolder from '../../placeholder.png'\r\n\r\nconst styles = theme =>({\r\n  root:{\r\n    display:'flex',\r\n    flexWrap:'wrap',\r\n    width:'100%'\r\n  },\r\n  card:{\r\n    width:'100%'\r\n  },\r\n  media:{\r\n    height:200,\r\n    objectFit:'cover'\r\n  },\r\n  '@media screen and (min-width:576px)':{\r\n    itemContainer: {\r\n      width:'50%'\r\n    }\r\n  }\r\n})\r\n\r\nclass InventoryItem extends Component {\r\n  state={\r\n    inventoryItem:null,\r\n    loading:true\r\n  }\r\n\r\n  updateState=()=>{\r\n    let id =this.props.match.params.id\r\n\r\n    for (let inventory of this.props.inventory){\r\n      if(inventory[0]===id){\r\n        this.setState({\r\n          inventoryItem:inventory[1],\r\n          loading:false\r\n        })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.updateState()\r\n  }\r\n\r\n  handleAddQuantity =(quantity)=>{\r\n    this.props.onIncreaseQuantity(actionTypes.INCREASE_QUANTITY,this.props.match.params.id)\r\n    this.updateState();\r\n  }\r\n  handleDecreaseQuantity =() =>{\r\n    this.props.onDecreaseQuantity(actionTypes.DECREASE_QUANTITY,this.props.match.params.id)\r\n    this.updateState();\r\n  }\r\n  handleAddQuantityAsync=() =>{\r\n    let id=this.props.match.params.id,idToken=this.props.auth.idToken,quantity;\r\n    for(let i=0;i<this.props.inventory.length;i++){\r\n      if(this.props.inventory[i][0]===id){\r\n        quantity=Number(this.props.inventory[i][1].quantity)\r\n        break;\r\n      }\r\n    }\r\n    this.props.onIncreaseQuantityAsync(id,idToken,quantity)\r\n  }\r\n  handleDecreaseQuantityAsync=() =>{\r\n    let id=this.props.match.params.id,idToken=this.props.auth.idToken,quantity;\r\n    for(let i=0;i<this.props.inventory.length;i++){\r\n      if(this.props.inventory[i][0]===id){\r\n        quantity=Number(this.props.inventory[i][1].quantity)\r\n        break;\r\n      }\r\n    }\r\n    this.props.onDecreaseQuantityAsync(id,idToken,quantity)\r\n  }\r\n  componentWillUnmount(){\r\n    this.handleAddQuantityAsync();\r\n    this.handleDecreaseQuantityAsync();\r\n  }\r\n\r\n  render(){\r\n    const { classes } = this.props\r\n    let { inventoryItem,loading } = this.state\r\n    let item=null;\r\n    if (loading) item=<Spinner/>\r\n    if(!loading){\r\n      item=(<Card className={classes.card} >\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  alt={inventoryItem.item_name}\r\n                  className={classes.media}\r\n                  image={inventoryItem.image_url?inventoryItem.image_url:PlaceHolder}\r\n                  title=\"Food\"\r\n                  />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {inventoryItem.item_name}\r\n                  </Typography>\r\n                  <Typography component=\"p\">\r\n                    Quantity <strong>{inventoryItem.quantity} {inventoryItem.unit}</strong>\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"secondary\"  onClick={()=> this.handleDecreaseQuantity( )}>\r\n                  <RemoveCircle/><Typography variant=\"srOnly\">Remove</Typography>\r\n                </Button>\r\n                <Button size=\"small\" color=\"secondary\" onClick={()=> this.handleAddQuantity()}>\r\n                  <AddCircle/><Typography variant=\"srOnly\">Add</Typography>\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n      )\r\n    }\r\n    return(\r\n      <Grid item\r\n            xs={12}\r\n            sm={8}\r\n            md={8}>\r\n              {item}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps= state =>({\r\n  inventory:state.inventory.inventory,\r\n  auth:state.auth\r\n})\r\nconst mapDispatchToProps = dispatch =>({\r\n  onIncreaseQuantity: (type,id)=> dispatch(actions.increaseQuantity(type,id)),\r\n  onIncreaseQuantityAsync:(id,idToken,quantity)=>dispatch(actions.increaseQuantityAsync(id,idToken,quantity)),\r\n  onDecreaseQuantityAsync:(id,idToken,quantity)=>dispatch(actions.decreaseQuantityAsync(id,idToken,quantity)),\r\n  onDecreaseQuantity: (type,id)=> dispatch(actions.decreaseQuantity(type,id))\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(InventoryItem));\r\n"],"sourceRoot":""}